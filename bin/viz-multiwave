#!/usr/bin/env python3

# Visualize a folder containing many single-channel WAVs (assume stereo pairs for labels)

import sys
from pathlib import Path
import ffmpeg

PAIRS = [
    'hype',
    'opx-4',
    'kick',
    'hi-hat',
    'snare',
    '', # guitar
    '', # vocals
    'microfreak 1',
    'microfreak 2',
    '303 bus',
    'crum bus',
    'solar 42f',
    'traktor',
    '', '', '', '', '', '', '']


def visualize_mono_wavs(
    input_dir: str,
    output_file: str,
    width: int = 1280,
    per_channel_height: int = 40,
    fps: int = 30
):
    wav_files = sorted(Path(input_dir).glob("*.wav"))
    if len(wav_files) % 2 != 0:
        raise ValueError("Expected an even number of mono WAV files for stereo pairing")

    waves = []
    font = "/Users/aayars/.noisemaker/fonts/DS-DIGIB.TTF"

    for wav in wav_files:
        # trim as needed
        stream = (
            ffmpeg
            .input(str(wav))
            .filter('atrim', start=2400, duration=10)
            .filter('asetpts', 'PTS-STARTPTS')
        )

        wave = (
            stream
            .filter('showwaves', s=f"{width}x{per_channel_height}", mode='line')
            .filter('format', 'rgba')
        )
        waves.append(wave)

    # collect labeled stereo streams
    labeled_streams = []
    for i in range(0, len(waves), 2):
        pair_num = i // 2
        label = PAIRS[pair_num]
        if label == '':
            continue

        left, right = waves[i], waves[i + 1]
        stereo = ffmpeg.filter([left, right], 'vstack', inputs=2)

        labeled = stereo.filter(
            'drawtext',
            fontfile=font,
            text=label,
            x='5',
            y='20',
            fontsize=per_channel_height,
            fontcolor='white'
        )
        labeled_streams.append((label, labeled))

    # sort by label alphabetically (caseâ€‘insensitive)
    labeled_streams.sort(key=lambda x: x[0].lower())
    paired = [stream for _, stream in labeled_streams]

    # stack all labeled stereo blocks in alphabetical order
    final = ffmpeg.filter(paired, 'vstack', inputs=len(paired))

    (
        ffmpeg
        .output(
            final,
            output_file,
            r=fps,
            pix_fmt='yuv420p',
            movflags='+faststart'
        )
        .overwrite_output()
        .run()
    )


if __name__ == "__main__":
    if len(sys.argv) != 3:
        print(f"Usage: {sys.argv[0]} <input_mono_wavs_dir> <output_mp4>", file=sys.stderr)
        sys.exit(1)

    visualize_mono_wavs(sys.argv[1], sys.argv[2])
