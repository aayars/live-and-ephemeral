#!/usr/bin/env python3

import csv
import random

def generate_test_data(
    filename="midi_events.csv",
    total_time=10.0,
    note_min=21,
    note_max=108,
    event_count=150,
    bpm=140.05
):
    events = []

    # generate random note_on / note_off pairs
    for _ in range(event_count):
        t_on = random.uniform(0, total_time)
        note = random.randint(note_min, note_max)
        velocity = random.randint(30, 127)
        ch = random.randint(1, 16)

        events.append({
            "time":     t_on,
            "type":     "note_on",
            "note":     note,
            "velocity": velocity,
            "channel":  ch
        })

        t_off = min(total_time, t_on + random.uniform(0.05, 1.0))
        events.append({
            "time":     t_off,
            "type":     "note_off",
            "note":     note,
            "velocity": 0,
            "channel":  ch
        })

    # generate MIDI clock pulses: 24 per quarter note
    pulse_interval = 60.0 / bpm / 24.0
    n_pulses = int(total_time / pulse_interval) + 1

    for i in range(n_pulses):
        t = i * pulse_interval
        if t <= total_time:
            events.append({
                "time":     t,
                "type":     "clock",
                "note":     "",
                "velocity": "",
                "channel":  ""
            })

    # sort and write CSV
    events.sort(key=lambda e: e["time"])
    with open(filename, "w", newline="") as f:
        writer = csv.writer(f)
        writer.writerow(["time", "type", "note", "velocity", "channel"])
        for e in events:
            writer.writerow([
                f"{e['time']:.6f}",
                e["type"],
                e["note"],
                e["velocity"],
                e["channel"]
            ])


if __name__ == "__main__":
    generate_test_data()
    print("âœ” Generated midi_events.csv with note_on and note_off events")

